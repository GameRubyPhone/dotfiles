run-shell ~/clone/path/resurrect.tmux
#############################
###
#############################
# useful command
# <C-a> : swap-window -s 2 -t 1     reorder the windows
# set the default
set -g default-shell /bin/zsh

###########################
#  Key Bindings
###########################

# tmux prefix
unbind C-b
# reset prefix to C-s, as C-a is the moving to the begining of the line
set -g prefix 'C-\'
bind-key 'C-\' send-prefix

# paste
unbind C-p
bind C-p paste-buffer

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"
# split pane imported by T.Z
bind \ split-window -h  -c '#{pane_current_path}'
bind - split-window -v  -c '#{pane_current_path}'
bind c new-window -c '#{pane_current_path}'
bind h split-window -h "htop"
bind t split-window -h "vi ~/todo.md"

# Fine adjustment (1 or 2 cursor cells per bump) imported by T.Z
bind -r Left resize-pane -L 2
bind -r Right resize-pane -R 2
bind -r Down resize-pane -D 1
bind -r Up resize-pane -U 1
# smart pane switching with awareness of vim splits imported by T.Z
# test this is in the vim process to run the navigation.
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
# bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
unbind -n C-h
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
# bind K to kill the lastest session
bind K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'
# Prompted join-pane
bind j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"
# bind C-j split-window -v "tmux list-sessions"
# set the base index from 1 imported by T.Z
set -g base-index 1
set -g renumber-window on
# break the panel into the window
bind b break-pane -d
# copy and paste in the tmux
# Use vim keybindings in copy mode
set -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-pipe "xclip -sel clip -i"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind -t vi-copy Enter copy-pipe "xclip -sel clip -i"

###########################
# Status Bar
###########################

# enable UTF-8 support in status bar
set -g status-utf8 on

# set refresh interval for status bar
set -g status-interval 30

# center the status bar
set -g status-justify left

# show session, window, pane in left status bar
set -g status-left-length 40
set -g status-left '#[fg=green]#S#[fg=blue] #I:#P#[default]'

# show hostname, date, time, and battery in right status bar
set-option -g status-right '#[fg=green] %m/%d/%y %I:%M#[fg=red]#(battery discharging)#[default]#(battery charging)'

###########################
# Colors
###########################

# color status bar
set -g status-bg colour235
set -g status-fg white

# highlight current window
set-window-option -g window-status-current-fg black
set-window-option -g window-status-current-bg green

# set color of active pane
set -g pane-border-fg colour235
set -g pane-border-bg black
set -g pane-active-border-fg green
set -g pane-active-border-bg black
